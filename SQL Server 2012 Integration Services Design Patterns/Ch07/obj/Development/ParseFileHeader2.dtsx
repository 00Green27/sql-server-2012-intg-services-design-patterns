<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/22/2012 9:21:40 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="VMSQL2012E"
  DTS:CreatorName="vmSQL2012E\A. Ray Leonard"
  DTS:DTSID="{96709609-A303-4538-89C4-E99A93A25D44}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="ParseFileHeader2"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{5FF576B7-45F3-4823-AF0B-F440E5FEB2C9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Header File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9A819A8E-3347-4756-AD7A-6CAAC04BC121}"
      DTS:ObjectName="Header File">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\A. Ray Leonard\Documents\MyFileHeaderSource.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ID"
              DTS:DTSID="{AA3509A7-290C-44DC-B8EE-EDBCE97166B2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Name"
              DTS:DTSID="{CBD4C662-49A3-4B88-830B-ADB5206BC77C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="{5918251B-2970-45A4-AB5F-01C3C588FE5A}"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5DEA529E-FA0E-4E92-9A2A-6BE74A6CDC73}"
      DTS:ExecutableType="{5918251B-2970-45A4-AB5F-01C3C588FE5A}"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\der Data"
              componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der Data"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\der Data.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\der Data.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task\der Data.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\der Data.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task\der Data.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\der Data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\der Data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\der Data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\der Data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\der Header"
              componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der Header"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\der Header.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\der Header.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task\der Header.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\der Header.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task\der Header.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\der Header.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\der Header.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\der Header.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\der Header.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Flat File Source"
              componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Header File]"
                  connectionManagerRefId="Package.ConnectionManagers[Header File]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[ID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ID]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Name]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Name]"
                      length="50"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Name]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Name" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\scr Parse Header and Data"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="scr Parse Header and Data"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#Region "Help:  Introduction to the Script Component"
' The Script Component allows you to perform virtually any operation that can be accomplished in
' a .Net application within the context of an Integration Services data flow.

' Expand the other regions which have "Help" prefixes for examples of specific ways to use
' Integration Services features within this script component.
#End Region

#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

' This is the class to which to add your code.  Do not change the name, attributes, or parent
' of this class.
<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute> _
<CLSCompliant(False)> _
Public Class ScriptMain
    Inherits UserComponent

    Dim iRowNum As Integer = 0

#Region "Help:  Using Integration Services variables and parameters"
    'To use a variable in this script, first ensure that the variable has been added to
    'either the list contained in the ReadOnlyVariables property or the list contained in
    'the ReadWriteVariables property of this script component, according to whether or not your
    'code needs to write into the variable.  To do so, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable or parameter:
    ' startTime = Variables.MyStartTime;

    'Example of writing to a variable:
    ' Variables.myStringVariable = "new value";
#End Region

#Region "Help:  Using Integration Services Connnection Managers"
    'Some types of connection managers can be used in this script component.  See the help topic
    '"Working with Connection Managers Programatically" for details.

    'To use a connection manager in this script, first ensure that the connection manager has
    'been added to either the list of connection managers on the Connection Managers page of the
    'script component editor.  To add the connection manager, save this script, close this instance of
    ' Visual Studio, and add the Connection Manager to the list.

    'If the component needs to hold a connection open while processing rows, override the
    'AcquireConnections and ReleaseConnections methods.

    'Example of using an ADO.Net connection manager to acquire a SqlConnection:
    ' Dim rawConnection As Object = Connections.SalesDB.AcquireConnection(Transaction)
    ' Dim salesDBConn As SqlConnection = CType(rawConnection, SqlConnection)

    'Example of using a File connection manager to acquire a file path:
    ' Dim rawConnection As Object = Connections.Prices_zip.AcquireConnection(Transaction)
    ' Dim filePath As String = CType(rawConnection, String)

    'Example of releasing a connection manager:
    ' Connections.SalesDB.ReleaseConnection(rawConnection)
#End Region

#Region "Help:  Firing Integration Services Events"
    'This script component can fire events.

    'Example of firing an error event:
    ' ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, cancel)

    'Example of firing an information event:
    ' ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0)

#End Region

    'This method is called once, before rows begin to be processed in the data flow.
    '
    'You can remove this method if you don't need to do anything here.
    Public Overrides Sub PreExecute()
        MyBase.PreExecute()
        '
        ' Add your code here
        '
    End Sub

    ' This method is called after all the rows have passed through this component.
    '
    ' You can delete this method if you don't need to do anything here.
    Public Overrides Sub PostExecute()
        MyBase.PostExecute()
        '
        ' Add your code here
        '
    End Sub

    'This method is called once for every row that passes through the component from Input0.
    '
    'Example of reading a value from a column in the the row:
    ' zipCode = Row.ZipCode
    '
    'Example of writing a value to a column in the row:
    ' Row.ZipCode = zipCode
    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

        ' increment rownum
        iRowNum += 1

        Select Case iRowNum
            Case 1
                ' parse
                Dim sTmpCount As String = Row.ID
                sTmpCount = Strings.Trim(Strings.Left(Row.ID, Strings.InStr(Row.ID, " ")))
                Dim sTmpDate As String = Row.Name
                sTmpDate = Strings.Replace(Row.Name, " extracted ", "")

                ' header row
                With HeaderBuffer
                    .AddRow()
                    .RowCount = Convert.ToInt32(sTmpCount)
                    .ExtractDateTime = Convert.ToDateTime(sTmpDate)
                End With
            Case 2
                ' ignore
            Case 3
                'column names
            Case Else
                ' data rows
                With DataBuffer
                    .AddRow()
                    .ID = Convert.ToInt32(Row.ID)
                    .Name = Row.Name
                End With
        End Select


    End Sub

    Public Overrides Sub CreateNewOutputRows()
        '
        ' Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
        ' For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        '
    End Sub

End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_cb76905df11841f9b1767c46c445427b")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_cb76905df11841f9b1767c46c445427b")> 
<Assembly: AssemblyCopyright("Copyright @  2012")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ce541cb8-1609-48c2-871f-d298a9a61b09")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public HeaderBuffer As HeaderBuffer

    Public DataBuffer As DataBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If HeaderBuffer IsNot Nothing Then
            HeaderBuffer.SetEndOfRowset
            HeaderBuffer = Nothing
        End If

        If DataBuffer IsNot Nothing Then
            DataBuffer.SetEndOfRowset
            DataBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Header") Then
                HeaderBuffer = New HeaderBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
            If OutputIDs(I) = GetOutputID(OutputMap, "Data") Then
                DataBuffer = New DataBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [ID]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [Name]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [Name_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class HeaderBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [RowCount]() As Int32
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [RowCount_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [ExtractDateTime]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [ExtractDateTime_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class DataBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Name]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Name_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [ID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [ID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_cb76905df11841f9b1767c46c445427b</msb:CodeName>
		<msb:DisplayName>SC_cb76905df11841f9b1767c46c445427b</msb:DisplayName>
		<msb:ProjectId>{38C372A3-AEBB-48C2-B1A1-1605954F05C6}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_cb76905df11841f9b1767c46c445427b.vbproj"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="main.vb"/>
		<msb:File Include="ComponentWrapper.vb"/>
		<msb:File Include="BufferWrapper.vb"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_cb76905df11841f9b1767c46c445427b.vbproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CDB1F267-2F22-43B8-830A-A2F138B7BC20}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_cb76905df11841f9b1767c46c445427b</RootNamespace>
    <AssemblyName>SC_cb76905df11841f9b1767c46c445427b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="SSIS_SC110" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_cb76905df11841f9b1767c46c445427b.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEopa08AAAAAAAAAAOAAAiELAQgAACYAAAAGAAAAAAAA3kUA
AAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIhFAABTAAAAAGAAANgDAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANgDAAAAYAAAAAQAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
RQAAAAAAAEgAAAACAAUAkCcAAPgdAAABAAAAAAAAANgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqACoCAwQFKB4AAAoqABMwAwAUAAAADAAAEQJ7HwAACgJ7IAAAChaUbyEAAAoqEzACAAgA
AAANAAARAhZvIgAACioTMAMAFAAAAA4AABECex8AAAoCeyAAAAoXlG8hAAAKKhMwAgAIAAAADwAA
EQIXbyIAAAoqEzABAAkAAAAQAAARAigjAAAKCgYqAAAAEzABAAkAAAARAAARAigkAAAKCgYqAAAA
KgIDBAUoHgAACioAOgIWA4wcAAABbyYAAAoqAGIDLAkCFm8nAAAKKwtyAQAAcHMoAAAKeioAAAA6
AhcDjAoAAAFvJgAACioAYgMsCQIXbycAAAorC3IBAABwcygAAAp6KgAAAB4CKCkAAAoqHgIoKgAA
CioTMAEACQAAABIAABECKCQAAAoKBioAAAAqAgMEBSgeAAAKKgAmAhYDbyYAAAoqAABiAywJAhZv
JwAACisLcgEAAHBzKAAACnoqAAAAOgIXA4wcAAABbyYAAAoqAGIDLAkCF28nAAAKKwtyAQAAcHMo
AAAKeioAAAAeAigpAAAKKh4CKCoAAAoqEzABAAkAAAATAAARAigkAAAKCgYqAAAAmgIoKwAACgIC
czAAAAZ9BgAABAICczEAAAZ9BwAABAIWfQoAAAQqABMwBABPAAAAAAAAAARyngAAcBpvLAAACiwV
AgUCA28tAAAKDgRzEQAABm8uAAAGBW8uAAAKLCMCAnsKAAAEF9Z9CgAABAJ7CgAABBczDAJvKgAA
BgJvKwAABioABioAANYCewgAAAQsEgJ7CAAABG8eAAAGAhR9CAAABAJ7CQAABCwSAnsJAAAEbyYA
AAYCFH0JAAAEKgAAEzAFAGsAAAAUAAARFgMX2gsKK1gEBpQOBHKuAABwKC8AAAozGQIFBpoCBAaU
by0AAAoOBHMYAAAGfQgAAAQEBpQOBHK8AABwKC8AAAozGQIFBpoCBAaUby0AAAoOBHMgAAAGfQkA
AAQGF9YKBgcxpAJvLQAABioABioAAEorBwIDby8AAAYDbxYAAAYt8SoABioAADoCKBcAAAoCA30L
AAAEKgA6AigXAAAKAgN9DAAABCoAOgIoKAAABgIWfQ0AAAQqAB4CKDAAAAoqHgIoMQAACioTMAYA
0QAAABUAABECAnsNAAAEF9Z9DQAABAJ7DQAABBdZRQMAAAACAAAAdAAAAHYAAAArdgNvEgAABgoD
bxIAAAYDbxIAAAZyxgAAcBYoMgAACigzAAAKKDQAAAoKA28UAAAGCwNvFAAABnLKAABwcuIAAHAX
FRYoNQAACgsCewgAAAQNCW8dAAAGCQYoNgAACm8ZAAAGCQcoNwAACm8bAAAGFA0rNSszKzECewkA
AAQTBBEEbyUAAAYRBANvEgAABig2AAAKbyMAAAYRBANvFAAABm8hAAAGFBMEKgAAAAYqAAAeAigX
AAAKKhMwAgAtAAAAFgAAEX4OAAAELSBy5AAAcNAOAAACKBQAAApvOQAACnM6AAAKCweADgAABH4O
AAAEKgAAABMwAQAGAAAAFwAAEX4PAAAEKgAAHgKADwAABCpCcxcAAAooEQAACoARAAAEKgAAAB4C
KDsAAAoqGzABAD8AAAAYAAARfhAAAAQtMn4RAAAEKBEAAAooPAAACn4QAAAELRxzPAAABoAQAAAE
3hB+EQAABCgRAAAKKD0AAArcfhAAAAQqAAEQAAACAB0ADCkAEAAAAAG0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAHAwAACN+AACIDAAAGAwAACNTdHJpbmdz
AAAAAKAYAAAYAQAAI1VTALgZAAAQAAAAI0dVSUQAAADIGQAAMAQAACNCbG9iAAAAAAAAAAIAAAFX
FaIJCQ8AAAD6JTMAFgAAAQAAADEAAAAPAAAAEQAAAD0AAAAiAAAASQAAAD4AAAAYAAAABwAAABQA
AAAVAAAACQAAAAEAAAAFAAAAAQAAAAIAAAADAAAAAgAAAAAA8AsBAAAAAAAKAIYBXAEKALoBnAEG
AMoBwwEKACICXAEGAKACwwEKACID+AIOAIUDZAMSALMDZAMOAMIDZAMGAHwEwwEOADgFZAMGAEsG
OgYGAHgGYwYWANkGxAYWACYHEAcWAD8HEAcWAGwHVAcGAJYHgwcKANUHrgcKAO0HEwAWACIIBQgG
AFcINwgGAHUIwwEGAJkIwwEKALIIEwAGAPYI1wgGABsJwwEGADEJwwEGAEgJwwEGAGIJwwEGAGkJ
wwEKAKcJEwAKAK8JEwAGANUJwwEOAPAJZAMGACkKFwoGAFAKPwoGAGMKgwcGALgKNwgGANgKNwgG
ABAL9goGACkLFwoGAEYL1wgGAFQLFwoGAG8LFwoGAIoLFwoGAKMLFwoGALwLFwoGANkLFwoAAAAA
AQAAAAAAAQABAAAAAAApADcABQABAAEAAAAAAF4ANwAJAAEAAgAAARAAaQA3AA0AAQADAAUBAABz
AAAADQAFAAgABQEAAIEAAAANAAUADwABAAAAnACpAB0ABgARAAEAAADNAKkAHQAGABgAAQAAANoA
qQAdAAYAIAABAAAA5QCpAC0ABgAoAAEAAADzAKkADQALADAAAQAAAP8AqQANAAwAMQABAAAACQGp
ACgADQAyAAAAAAAUASABDQAOADcAAAEQAFEBqQA5ABAAOwAxAOUBIAAxAA4CLQAxADACOgAxAFUC
RwAhADEDkAAGAPMA2gAGAP8A3gAGAM0A4gAGANoA5gABAEgF6gABAAEGCQEBAAEGCQEBABsG6gAR
AFsGEwERAIQGFwERAPEGNQERAPkGOQFQIAAAAAAGGJYBEwABAFggAAAAAAYYlgETAAEAYCAAAAAA
ERjRARcAAQCMIAAAAAATCNgBGwABAKQgAAAAABMI/gEoAAEAvCAAAAAAEwgnAjUAAQDUIAAAAAAT
CEUCQgABAOwgAAAAAEYCiwJjAAEACCEAAAAARgKUAmgAAgAcIQAAAACDAKUCbAACADQhAAAAAEYC
rQJxAAIASCEAAAAAEQC2AngAAgBkIQAAAAABANQCgAADAIAhAAAAAAYYlgETAAQAiCEAAAAAAwjo
AosABAC8IQAAAAAGGJYBEwAEANAhAAAAAAYYlgGmAAQA3CEAAAAABgj1A3EABwD8IQAAAAAGCPwD
sAAHABAiAAAAAAYICgRxAAcAMCIAAAAABggTBLAABwBEIgAAAACGACMEsAAHAFwiAAAAAIYAKwSw
AAcAdCIAAAAABhiWAaYABwCAIgAAAAAGCFUEvAAKAJAiAAAAAAYIaATBAAsArCIAAAAABgiFBMYA
DAC8IgAAAAAGCJkEwQANANgiAAAAAIYAtAQTAA4A4CIAAAAAhgC7BBMADgDoIgAAAACGACsEsAAO
AAAjAAAAAAYYlgGmAA4ADCMAAAAABggKBdUAEQAYIwAAAAAGCBMFwQASADQjAAAAAAYIIwW8ABMA
RCMAAAAABggqBcEAFABgIwAAAACGALQEEwAVAGgjAAAAAIYAuwQTABUAcCMAAAAAhgArBLAAFQCI
IwAAAAAGGJYBEwAVALAjAAAAAEYCVwXtABUADCQAAAAARgN2BRMAGQAQJAAAAAABAIQFEwAZAEgk
AAAAAEYCmAX3ABkAwCQAAAAARgO+BRMAHQDEJAAAAABGA9IFAwEdANgkAAAAAEYD5gUDAR4A3CQA
AAAABhiWAQ0BHwDsJAAAAAAGGJYBDQEgAPwkAAAAAAYYlgETACEADCUAAAAARgIjBhMAIQAUJQAA
AABGAi4GEwAhABwlAAAAAEYC5gUDASEA/CUAAAAARgK+BRMAIgAAJgAAAAADGJYBEwAiAAgmAAAA
ABYIkAYbASIARCYAAAAAFgikBiABIgBYJgAAAAAWCLAGJQEiAGAmAAAAABEY0QEXACMAdCYAAAAA
BhiWARMAIwB8JgAAAAAWCAYHPAEjAAAAAQCSAgAAAQDLAgAAAQDLAgAAAQDQAwAAAgDXAwAAAwDr
AwAAAQDQAwAAAgDXAwAAAwDrAwAAAQBiBAAAAQBiBAAAAQBiBAAAAQBiBAAAAQDQAwAAAgDXAwAA
AwDrAwAAAQBiBAAAAQBiBAAAAQBiBAAAAQBiBAAAAQBkBQAAAgBsBQAAAwDQAwAABADrAwAAAQCk
BQAAAgCsBQAAAwC2BQAABADrAwAAAQDQAwAAAQD9BQAAAQARBgAAAQARBgAAAQD9BQAAAQBiBAkA
lgETAHkAlgFGAYkAlgFVAREAlgETAJEAlgETACQAlgETACwAlgETADQAlgETADwAlgETACQA6AKL
ACwA6AKLADQA6AKLADwA6AKLAJkAlgETAKEAlgETAKkAlgHVALEAZgjvARkAiwJjABkAlAJoACkA
hwj8ARkArQJxAMEAowgMAhkAlgETAMkAlgEcAkQAMQOQAEwABgeLAEwAzQiZAkwAlgETANEAlgHB
ADkAlgGmADkA0AOuAjkA1wOyAkEACgm2AjkAFAm7AjkAIwSwADkAKwSwANkAlgHBADkANwnAAjkA
QAm8AOkAlgHVADkAtAQTADkAuwQTAFkAlgETAPEAiwLGAlkAegnNAkEAiwmwAFkAmwnTAlkAIwYT
AFkALgYTAAEBvQnfAgEBwwnoAgEByAnuAgEBzQnzAhEB3Qn/AhEB5QkEAxkBlgETACkAMgoUA2EA
lgEaA3EAlgETACkBWAo3AykBXgo3AzEBlgETADkBlgG8AEEBlgETAEkBlgHVAFEBlgHVAFkBlgHV
AGEBlgHVAGkBlgHVAHEBlgHVAHkBlgHVAIEBlgHVAIkBlgHVACkAgwCpAS4AOwKoAi4AMwIFBC4A
KwLuAy4AAwJKAy4ACwJpAy4AIwKoAi4ASwIFBC4A+wFBAy4AQwKoAi4AEwKxAy4AGwK+Ay4A6wCo
Ai4AKwHoA0AAKwB0AUAAEwBMAUMAEwBMAUMAGwBbAUkAgwDHAWMAGwBbAWMAEwBMAWkAgwC6AYAA
KwB0AYMAGwBbAYMAewB0AYMAcwB0AYkAgwDbAaAAKwB0AaMAwwAkAqMAEwBMAcAAKwB0AcMA6wCo
AsMAEwBMAeAAKwB0AeMAKwGoAgABEwBMAQABKwB0AQMBKwGoAiABKwB0ASABEwBMASMBKwGoAkAB
EwBMAUABKwB0AUMBKwGoAmABKwB0AWABEwBMAWMBKwGoAoABKwB0AYMBKwGoAqABKwB0AaMBwwF0
AaMBKwGoAsABKwB0AcABEwBMAeABKwB0AQACKwB0AQACEwBMAUkCEwAuA2kCEwAuA4kC8wF0AQAG
KwGoAiAGKwGoApUBmgGfAaQB9AH4AQMCCAIXAhcCnwIIAvQBCAL0AfQB9AH0AfQB2gIKAyIDKQM8
AwQAAQAGAAUABwAGAAgACgAJAA4ADgASAA8AFAAAALoBTwAAAHMCVAAAACICWQAAAH8CXgAAADsD
mAAAADcEtAAAADoEuAAAAEQEtAAAAEkEuAAAAMoEzAAAANMEuAAAAOME0AAAAPMEuAAAAEQEtAAA
AEkEuAAAADcEzAAAADoEuAAAAEsGKwEAALwGMAEAAGIEQQECAAQAAwACAAUABQACAAYABwACAAcA
CQACAA8ACwACABIADQACABMADwACABQAEQACABUAEwABABkAFQABABoAFwABABsAGQABABwAGwAB
ACEAHQABACIAHwABACMAIQABACQAIwACADgAJQACADkAJwABADoAJwACAD0AKQB1AHUAiAB5AYAB
hwGOAYYCjQIEgAAAAQAAAAAAAAAAAAAAAACpAAAABAAAAAAAAAAAAAAAAQAKAAAAAAAKAAAAAAAA
AAAAAAAKABMAAAAAAAsAAAAAAAAAAAAAAJ0ARwMAAAAACwAAAAAAAAAAAAAAnQCSAwAAAAAEAAAA
AAAAAAAAAAABAMMBAAAAAAAAAAABAAAAgAoAAAUABAAGAAQAAAAQAAwAyQIAABAAGQDJAgAAAAAb
AMkCLQASAi0AlAIAAAA8TW9kdWxlPgBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMATXlB
cHBsaWNhdGlvbgBTQ19jYjc2OTA1ZGYxMTg0MWY5YjE3NjdjNDZjNDQ1NDI3Yi5NeQBNeUNvbXB1
dGVyAE15UHJvamVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAElu
cHV0MEJ1ZmZlcgBTQ19jYjc2OTA1ZGYxMTg0MWY5YjE3NjdjNDZjNDQ1NDI3YgBIZWFkZXJCdWZm
ZXIARGF0YUJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRN
YWluAE15UmVzb3VyY2VzAFNDX2NiNzY5MDVkZjExODQxZjliMTc2N2M0NmM0NDU0MjdiLk15LlJl
c291cmNlcwBNeVNldHRpbmdzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZp
Y2VzAEFwcGxpY2F0aW9uQmFzZQAuY3RvcgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBD
b21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5jY3RvcgBnZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVj
dFByb3ZpZGVyAGdldF9BcHBsaWNhdGlvbgBtX0FwcE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1Vz
ZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAZ2V0X1dlYlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09i
amVjdFByb3ZpZGVyAEFwcGxpY2F0aW9uAFdlYlNlcnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2Rl
AFR5cGUAR2V0VHlwZQBUb1N0cmluZwBDcmVhdGVfX0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNw
b3NlX19JbnN0YW5jZV9fAGdldF9HZXRJbnN0YW5jZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlT
ZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0VmFsdWVgMQBtX0NvbnRleHQAR2V0SW5zdGFuY2UATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZQBTY3JpcHRCdWZmZXIATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVC
dWZmZXIAT3V0cHV0TmFtZU1hcABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAA
Z2V0X0lEAGdldF9JRF9Jc051bGwAZ2V0X05hbWUAZ2V0X05hbWVfSXNOdWxsAE5leHRSb3cARW5k
T2ZSb3dzZXQASUQASURfSXNOdWxsAE5hbWUATmFtZV9Jc051bGwAc2V0X1Jvd0NvdW50AFZhbHVl
AHNldF9Sb3dDb3VudF9Jc051bGwARGF0ZVRpbWUAc2V0X0V4dHJhY3REYXRlVGltZQBzZXRfRXh0
cmFjdERhdGVUaW1lX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAUm93Q291bnQAUm93Q291
bnRfSXNOdWxsAEV4dHJhY3REYXRlVGltZQBFeHRyYWN0RGF0ZVRpbWVfSXNOdWxsAHNldF9OYW1l
AHNldF9OYW1lX0lzTnVsbABzZXRfSUQAc2V0X0lEX0lzTnVsbABTY3JpcHRDb21wb25lbnQASW5w
dXRzRmluaXNoZWQAUHJvY2Vzc0lucHV0AElucHV0SUQASW5wdXROYW1lAEZpbmlzaE91dHB1dHMA
TWFya091dHB1dHNGaW5pc2hlZABQcmltZU91dHB1dABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJz
AENyZWF0ZU5ld091dHB1dFJvd3MASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lu
cHV0Um93AFJvdwBQYXJlbnRDb21wb25lbnQAQ29tcG9uZW50AGlSb3dOdW0AUHJlRXhlY3V0ZQBQ
b3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxl
TmFtZUF0dHJpYnV0ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0
T2JqZWN0VmFsdWUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9y
AENyZWF0ZUluc3RhbmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0
ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBHZXRTdHJpbmcA
SXNOdWxsAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBJbnQzMgBzZXRfSXRlbQBTZXROdWxsAEludmFs
aWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24AR2V0Q29sdW1uSW5k
ZXhlcwBnZXRfRW5kT2ZSb3dzZXQAR2V0T3V0cHV0SUQAU3RyaW5ncwBDb21wYXJlTWV0aG9kAElu
U3RyAExlZnQAVHJpbQBSZXBsYWNlAENvbnZlcnQAVG9JbnQzMgBUb0RhdGVUaW1lAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5
AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAFNDX2NiNzY5MDVkZjExODQxZjliMTc2N2M0NmM0NDU0Mjdi
LlJlc291cmNlcy5yZXNvdXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU0NfY2I3Njkw
NWRmMTE4NDFmOWIxNzY3YzQ2YzQ0NTQyN2IuZGxsAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAA1IAGUAYQBkAGUAcgAACUQAYQB0AGEA
AAMgAAAXIABlAHgAdAByAGEAYwB0AGUAZAAgAAABADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAu
AE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAAAAFyaDVD2BJQ6be5XL9+y+vAAi3elxWGTTgiQiwP19/
EdUKOgMgAAEDAAABBAAAEgwHBhUSGAESDAQAABIIBwYVEhgBEggEAAASEQcGFRIYARIRBAAAEhQH
BhUSGAESFAQIABIMBAgAEggECAASEQQIABIUBCABAhwDIAAIBCAAEhUDIAAOAh4ABxABAR4AHgAH
MAEBARAeAAITAAQgABMABwYVEhkBEwAEKAATAAiJhF3NgIDMkQkgAwESIR0IEiUDIAACAygADgMo
AAIEIAEBCAQgAQECBSABAREpAygACAQoABEpBCABAQ4DBhIsAwYSMAMGEiADBhIkAgYICSAEAQgO
EiESJQsgBAEIHQgdEiESJQUgAQESHAMGEi0FIAEBEi0DBhIxAwYSNQQAABIxBAAAEjUFAAEBEjUE
CAASMQQIABI1AwYSPAIGHAQAABI8BAgAEjwFIAEBEUEIAQABAAAAAAAFIAIBDg4YAQAKTXlUZW1w
bGF0ZQgxMC4wLjAuMAAABAEAAAAGFRIYARIMBhUSGAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwES
CAQHARIRBAcBEhQQAQALTXkuQ29tcHV0ZXIAAAwBAAdNeS5Vc2VyAAATAQAOTXkuQXBwbGljYXRp
b24AABMBAA5NeS5XZWJTZXJ2aWNlcwAABAABHBwDBwECAwcBCAYAARIVEV0EBwESFQMHAQ4FEAEA
HgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29h
cEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2Vf
XwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMTABMAEwAFAQAAAAADBhIhAwYdCAQgAQ4I
BCABAggFIAIBCBwGIAICDhF9BSABHQgIBgACCBIlDgQHAggICAADCA4OEYCFBQACDg4IBAABDg4L
AAYODg4OCAgRgIUEAAEIDgUAAREpDgkHBQ4OCBIgEiQFIAASgJEHIAIBDhKAkQYHAhIxEjEEBwES
NQgBAAIAAAAAAAQAAQEcBAcBEjwIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACRjZTU0MWNiOC0xNjA5LTQ4YzItODcx
Zi1kMjk4YTlhNjFiMDkAAAUBAAEAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAAKAEAI1NDX2NiNzY5
MDVkZjExODQxZjliMTc2N2M0NmM0NDU0MjdiAAAAALBFAAAAAAAAAAAAAM5FAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADARQAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACA
AwAAAAAAAAAAAACAAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
4AIAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAvAIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGMAYgA3ADYA
OQAwADUAZABmADEAMQA4ADQAMQBmADkAYgAxADcANgA3AGMANAA2AGMANAA0ADUANAAyADcAYgAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYwBiADcANgA5ADAANQBkAGYAMQAxADgANAAx
AGYAOQBiADEANwA2ADcAYwA0ADYAYwA0ADQANQA0ADIANwBiAC4AZABsAGwAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAx
ADIAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYwBiADcA
NgA5ADAANQBkAGYAMQAxADgANAAxAGYAOQBiADEANwA2ADcAYwA0ADYAYwA0ADQANQA0ADIANwBi
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMAYgA3ADYA
OQAwADUAZABmADEAMQA4ADQAMQBmADkAYgAxADcANgA3AGMANAA2AGMANAA0ADUANAAyADcAYgAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAOA1AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_cb76905df11841f9b1767c46c445427b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">VisualBasic</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">3aa75c093211fb71cbc892a96d76b218</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\scr Parse Header and Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\scr Parse Header and Data.Inputs[Input 0].Columns[ID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ID"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Data Flow Task\scr Parse Header and Data.Inputs[Input 0].Columns[Name]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Name"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Name]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Header]"
                  hasSideEffects="true"
                  name="Header">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Header].Columns[RowCount]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Header].Columns[RowCount]"
                      name="RowCount" />
                    <outputColumn
                      refId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Header].Columns[ExtractDateTime]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Header].Columns[ExtractDateTime]"
                      name="ExtractDateTime" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Data]"
                  hasSideEffects="true"
                  name="Data">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Data].Columns[Name]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Data].Columns[Name]"
                      name="Name" />
                    <outputColumn
                      refId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Data].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Data].Columns[ID]"
                      name="ID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Data]"
              endId="Package\Data Flow Task\der Data.Inputs[Derived Column Input]"
              name="Data"
              startId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Data]" />
            <path
              refId="Package\Data Flow Task.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task\scr Parse Header and Data.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Header]"
              endId="Package\Data Flow Task\der Header.Inputs[Derived Column Input]"
              name="Header"
              startId="Package\Data Flow Task\scr Parse Header and Data.Outputs[Header]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task\Flat File Source"
          TopLeft="215.5,56" />
        <NodeLayout
          Size="206,42"
          Id="Package\Data Flow Task\scr Parse Header and Data"
          TopLeft="188.5,167.25" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="291.5,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69.25"
              Start="0,0"
              End="0,61.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="132,42"
          Id="Package\Data Flow Task\der Header"
          TopLeft="521,167.25" />
        <NodeLayout
          Size="121,42"
          Id="Package\Data Flow Task\der Data"
          TopLeft="231,275" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Data]"
          TopLeft="291.5,209.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.75"
              Start="0,0"
              End="0,58.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-9.628359375,25.4140625,19.25671875,7.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Header]"
          TopLeft="394.5,188.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="126.5,0"
              Start="0,0"
              End="119,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="119,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.06630859375,5,30.8673828125,7.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>